{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1f3ZjCS1yq9_3KqI3uCnWBEwWadR9uC6a","authorship_tag":"ABX9TyMPFZSlaA2kW1xwGEk+sOL8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":[],"metadata":{"id":"l2gbFlepB0Bl"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":52,"metadata":{"id":"5_kzOZwmBSO_","executionInfo":{"status":"ok","timestamp":1740847317295,"user_tz":0,"elapsed":11,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}}},"outputs":[],"source":["import pandas as pd\n","import json\n","from datetime import datetime\n","\n","# Load the CSV file\n","csv_file = \"/content/drive/MyDrive/Colab Notebooks/MeldRx/heart_disease.csv\"\n","df = pd.read_csv(csv_file)"]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"wQyDTIcECXBq","executionInfo":{"status":"ok","timestamp":1740847319342,"user_tz":0,"elapsed":112,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}},"outputId":"47072a05-68f5-4165-ed97-ec4fc142d8e9"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   patient id first name last name  birth date  age  sex  chest pain type  \\\n","0           1     Olivia   Johnson  12/03/1984   40    1                2   \n","1           2       Liam     Brown  25/08/1975   49    0                3   \n","2           3       Emma     Smith  07/11/1987   37    1                2   \n","3           4       Noah  Williams  18/06/1976   48    0                4   \n","4           5        Ava     Davis  04/02/1971   54    1                3   \n","\n","   resting bp s  cholesterol  fasting blood sugar  resting ecg  \\\n","0           140          289                    0            0   \n","1           160          180                    0            0   \n","2           130          283                    0            1   \n","3           138          214                    0            0   \n","4           150          195                    0            0   \n","\n","   max heart rate  exercise angina  oldpeak  ST slope  target  \n","0             172                0      0.0         1       0  \n","1             156                0      1.0         2       1  \n","2              98                0      0.0         1       0  \n","3             108                1      1.5         2       1  \n","4             122                0      0.0         1       0  "],"text/html":["\n","  <div id=\"df-b68cf6bb-7ed0-45b9-a709-90d14864383e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patient id</th>\n","      <th>first name</th>\n","      <th>last name</th>\n","      <th>birth date</th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>chest pain type</th>\n","      <th>resting bp s</th>\n","      <th>cholesterol</th>\n","      <th>fasting blood sugar</th>\n","      <th>resting ecg</th>\n","      <th>max heart rate</th>\n","      <th>exercise angina</th>\n","      <th>oldpeak</th>\n","      <th>ST slope</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Olivia</td>\n","      <td>Johnson</td>\n","      <td>12/03/1984</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>172</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Liam</td>\n","      <td>Brown</td>\n","      <td>25/08/1975</td>\n","      <td>49</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>156</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Emma</td>\n","      <td>Smith</td>\n","      <td>07/11/1987</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>98</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Noah</td>\n","      <td>Williams</td>\n","      <td>18/06/1976</td>\n","      <td>48</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>108</td>\n","      <td>1</td>\n","      <td>1.5</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Ava</td>\n","      <td>Davis</td>\n","      <td>04/02/1971</td>\n","      <td>54</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>122</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b68cf6bb-7ed0-45b9-a709-90d14864383e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b68cf6bb-7ed0-45b9-a709-90d14864383e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b68cf6bb-7ed0-45b9-a709-90d14864383e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b779f2a4-3229-43f6-9a91-0f4077d1f485\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b779f2a4-3229-43f6-9a91-0f4077d1f485')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b779f2a4-3229-43f6-9a91-0f4077d1f485 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1190,\n  \"fields\": [\n    {\n      \"column\": \"patient id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 343,\n        \"min\": 1,\n        \"max\": 1190,\n        \"num_unique_values\": 1190,\n        \"samples\": [\n          391,\n          248,\n          261\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"first name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 221,\n        \"samples\": [\n          \"Faith\",\n          \"Xavier\",\n          \"Avery\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 700,\n        \"samples\": [\n          \"Cross\",\n          \"Sumner\",\n          \"Mayo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birth date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1058,\n        \"samples\": [\n          \"05/12/1973\",\n          \"25/10/1992\",\n          \"16/01/1972\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chest pain type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting bp s\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101,\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fasting blood sugar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting ecg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max heart rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exercise angina\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0863372185219835,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST slope\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"puXsbYCGCsRf","executionInfo":{"status":"ok","timestamp":1740847320700,"user_tz":0,"elapsed":39,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}},"outputId":"6d3b2fbf-1be8-449e-a834-f9d32aae6633"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1190, 16)"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LjwycnlYCwb6","executionInfo":{"status":"ok","timestamp":1740847321936,"user_tz":0,"elapsed":48,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}},"outputId":"89360ed8-69f6-4aa4-f60c-3b83f17bc51e"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1190 entries, 0 to 1189\n","Data columns (total 16 columns):\n"," #   Column               Non-Null Count  Dtype  \n","---  ------               --------------  -----  \n"," 0   patient id           1190 non-null   int64  \n"," 1   first name           1190 non-null   object \n"," 2   last name            1190 non-null   object \n"," 3   birth date           1190 non-null   object \n"," 4   age                  1190 non-null   int64  \n"," 5   sex                  1190 non-null   int64  \n"," 6   chest pain type      1190 non-null   int64  \n"," 7   resting bp s         1190 non-null   int64  \n"," 8   cholesterol          1190 non-null   int64  \n"," 9   fasting blood sugar  1190 non-null   int64  \n"," 10  resting ecg          1190 non-null   int64  \n"," 11  max heart rate       1190 non-null   int64  \n"," 12  exercise angina      1190 non-null   int64  \n"," 13  oldpeak              1190 non-null   float64\n"," 14  ST slope             1190 non-null   int64  \n"," 15  target               1190 non-null   int64  \n","dtypes: float64(1), int64(12), object(3)\n","memory usage: 148.9+ KB\n"]}]},{"cell_type":"code","source":["# Renaming Features\n","df = df.rename(columns={\n","    'sex': 'gender',\n","    'chest pain type': 'chest_pain_type',\n","    'resting bp s': 'resting_bps',\n","    'fasting blood sugar': 'fasting_blood_sugar',\n","    'resting ecg': 'resting_ecg',\n","    'max heart rate': 'max_heart_rate',\n","    'exercise angina': 'exercise_angina',\n","    'ST slope': 'st_slope',\n","    'total cholesterol': 'cholesterol',\n","})\n"],"metadata":{"id":"jbu4larcc1I9","executionInfo":{"status":"ok","timestamp":1740847323087,"user_tz":0,"elapsed":5,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":586},"id":"bbTafkiUC3Rt","executionInfo":{"status":"ok","timestamp":1740847324042,"user_tz":0,"elapsed":42,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}},"outputId":"a2c0b7e5-8617-43a4-ff5e-d94654ac38bf"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["patient id             0\n","first name             0\n","last name              0\n","birth date             0\n","age                    0\n","gender                 0\n","chest_pain_type        0\n","resting_bps            0\n","cholesterol            0\n","fasting_blood_sugar    0\n","resting_ecg            0\n","max_heart_rate         0\n","exercise_angina        0\n","oldpeak                0\n","st_slope               0\n","target                 0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>patient id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>first name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>last name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>birth date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>chest_pain_type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>resting_bps</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>cholesterol</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>fasting_blood_sugar</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>resting_ecg</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>max_heart_rate</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>exercise_angina</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>oldpeak</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>st_slope</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>target</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["# Creating a copy of the dataset\n","heart_copy = df.copy()\n","heart_copy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"CzfTkQNAD-h7","executionInfo":{"status":"ok","timestamp":1740847325469,"user_tz":0,"elapsed":105,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}},"outputId":"81fdd9b4-ba74-4f24-e3ad-ae2dfd9a8539"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      patient id first name    last name  birth date  age  gender  \\\n","0              1     Olivia      Johnson  12/03/1984   40       1   \n","1              2       Liam        Brown  25/08/1975   49       0   \n","2              3       Emma        Smith  07/11/1987   37       1   \n","3              4       Noah     Williams  18/06/1976   48       0   \n","4              5        Ava        Davis  04/02/1971   54       1   \n","...          ...        ...          ...         ...  ...     ...   \n","1185        1186      Paige   Winterwood  16/08/1979   45       1   \n","1186        1187     Archer  Willowstone  25/05/1956   68       1   \n","1187        1188      Josie  Brightfield  19/01/1967   57       1   \n","1188        1189     Holden    Crestwood  06/09/1967   57       0   \n","1189        1190       Lena  Meadowcrest  20/12/1986   38       1   \n","\n","      chest_pain_type  resting_bps  cholesterol  fasting_blood_sugar  \\\n","0                   2          140          289                    0   \n","1                   3          160          180                    0   \n","2                   2          130          283                    0   \n","3                   4          138          214                    0   \n","4                   3          150          195                    0   \n","...               ...          ...          ...                  ...   \n","1185                1          110          264                    0   \n","1186                4          144          193                    1   \n","1187                4          130          131                    0   \n","1188                2          130          236                    0   \n","1189                3          138          175                    0   \n","\n","      resting_ecg  max_heart_rate  exercise_angina  oldpeak  st_slope  target  \n","0               0             172                0      0.0         1       0  \n","1               0             156                0      1.0         2       1  \n","2               1              98                0      0.0         1       0  \n","3               0             108                1      1.5         2       1  \n","4               0             122                0      0.0         1       0  \n","...           ...             ...              ...      ...       ...     ...  \n","1185            0             132                0      1.2         2       1  \n","1186            0             141                0      3.4         2       1  \n","1187            0             115                1      1.2         2       1  \n","1188            2             174                0      0.0         2       1  \n","1189            0             173                0      0.0         1       0  \n","\n","[1190 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-875b2c5b-0eda-45c4-a3cc-460fa31a707c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patient id</th>\n","      <th>first name</th>\n","      <th>last name</th>\n","      <th>birth date</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>chest_pain_type</th>\n","      <th>resting_bps</th>\n","      <th>cholesterol</th>\n","      <th>fasting_blood_sugar</th>\n","      <th>resting_ecg</th>\n","      <th>max_heart_rate</th>\n","      <th>exercise_angina</th>\n","      <th>oldpeak</th>\n","      <th>st_slope</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Olivia</td>\n","      <td>Johnson</td>\n","      <td>12/03/1984</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>172</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Liam</td>\n","      <td>Brown</td>\n","      <td>25/08/1975</td>\n","      <td>49</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>156</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Emma</td>\n","      <td>Smith</td>\n","      <td>07/11/1987</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>98</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Noah</td>\n","      <td>Williams</td>\n","      <td>18/06/1976</td>\n","      <td>48</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>108</td>\n","      <td>1</td>\n","      <td>1.5</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Ava</td>\n","      <td>Davis</td>\n","      <td>04/02/1971</td>\n","      <td>54</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>122</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1185</th>\n","      <td>1186</td>\n","      <td>Paige</td>\n","      <td>Winterwood</td>\n","      <td>16/08/1979</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>110</td>\n","      <td>264</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>132</td>\n","      <td>0</td>\n","      <td>1.2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1186</th>\n","      <td>1187</td>\n","      <td>Archer</td>\n","      <td>Willowstone</td>\n","      <td>25/05/1956</td>\n","      <td>68</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>144</td>\n","      <td>193</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>141</td>\n","      <td>0</td>\n","      <td>3.4</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1187</th>\n","      <td>1188</td>\n","      <td>Josie</td>\n","      <td>Brightfield</td>\n","      <td>19/01/1967</td>\n","      <td>57</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>130</td>\n","      <td>131</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>115</td>\n","      <td>1</td>\n","      <td>1.2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1188</th>\n","      <td>1189</td>\n","      <td>Holden</td>\n","      <td>Crestwood</td>\n","      <td>06/09/1967</td>\n","      <td>57</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>130</td>\n","      <td>236</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>174</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1189</th>\n","      <td>1190</td>\n","      <td>Lena</td>\n","      <td>Meadowcrest</td>\n","      <td>20/12/1986</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>138</td>\n","      <td>175</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>173</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1190 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-875b2c5b-0eda-45c4-a3cc-460fa31a707c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-875b2c5b-0eda-45c4-a3cc-460fa31a707c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-875b2c5b-0eda-45c4-a3cc-460fa31a707c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5bbaf9d2-47e5-4279-a14a-9d54da18b40a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5bbaf9d2-47e5-4279-a14a-9d54da18b40a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5bbaf9d2-47e5-4279-a14a-9d54da18b40a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_81da29b1-62f7-4816-9fc5-e3c87c2fb86f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('heart_copy')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_81da29b1-62f7-4816-9fc5-e3c87c2fb86f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('heart_copy');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"heart_copy","summary":"{\n  \"name\": \"heart_copy\",\n  \"rows\": 1190,\n  \"fields\": [\n    {\n      \"column\": \"patient id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 343,\n        \"min\": 1,\n        \"max\": 1190,\n        \"num_unique_values\": 1190,\n        \"samples\": [\n          391,\n          248,\n          261\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"first name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 221,\n        \"samples\": [\n          \"Faith\",\n          \"Xavier\",\n          \"Avery\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 700,\n        \"samples\": [\n          \"Cross\",\n          \"Sumner\",\n          \"Mayo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birth date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1058,\n        \"samples\": [\n          \"05/12/1973\",\n          \"25/10/1992\",\n          \"16/01/1972\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chest_pain_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting_bps\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101,\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fasting_blood_sugar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting_ecg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max_heart_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exercise_angina\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0863372185219835,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"st_slope\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["# Renaming values into categorical values\n","\n","gender_map = {0: 'Female', 1: 'Male'}\n","chest_pain_map = {1: 'Typical Angina', 2: 'Atypical Angina', 3: 'Non-Angina', 4: 'Asymptomatic Angina'}\n","fasting_blood_sugar_map = {0: 'False', 1: 'True'}\n","resting_ecg_map = {0: 'Normal', 1: 'ST-T Wave Abnormality', 2: 'Left Ventricular Hypertrophy'}\n","exercise_angina_map = {0: 'No', 1: 'Yes'}\n","st_slope_map = {1: 'Upsloping', 2: 'Flat', 3: 'Downsloping'}\n","target_map = {0: 'Normal', 1: 'Heart Disease'}\n","\n","# Apply renaming to heart_copy DataFrame before mapping\n","heart_copy = heart_copy.rename(columns={'chest pain type': 'chest_pain_type', 'resting bp s': 'resting_bps', 'fasting blood sugar': 'fasting_blood_sugar', 'resting ecg': 'resting_ecg', 'max heart rate': 'max_heart_rate',\n","                              'exercise angina': 'exercise_angina', 'ST slope': 'ST_slope'})\n","\n","heart_copy['gender'] = heart_copy['gender'].map(sex_map)\n","heart_copy['chest_pain_type'] = heart_copy['chest_pain_type'].map(chest_pain_map) # Now this line should work correctly\n","heart_copy['fasting_blood_sugar'] = heart_copy['fasting_blood_sugar'].map(fasting_blood_sugar_map)\n","heart_copy['resting_ecg'] = heart_copy['resting_ecg'].map(resting_ecg_map)\n","heart_copy['exercise_angina'] = heart_copy['exercise_angina'].map(exercise_angina_map)\n","heart_copy['st_slope'] = heart_copy['st_slope'].map(st_slope_map)\n","heart_copy['target'] = heart_copy['target'].map(target_map)"],"metadata":{"id":"xF4ijkHsDBcU","executionInfo":{"status":"ok","timestamp":1740847326440,"user_tz":0,"elapsed":51,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["heart_copy.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"Xm9aAvq0CrYo","executionInfo":{"status":"ok","timestamp":1740847327902,"user_tz":0,"elapsed":119,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}},"outputId":"257a0ac2-efed-4c76-8ddb-5b2c934bbfaf"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   patient id first name last name  birth date  age  gender  \\\n","0           1     Olivia   Johnson  12/03/1984   40    Male   \n","1           2       Liam     Brown  25/08/1975   49  Female   \n","2           3       Emma     Smith  07/11/1987   37    Male   \n","3           4       Noah  Williams  18/06/1976   48  Female   \n","4           5        Ava     Davis  04/02/1971   54    Male   \n","\n","       chest_pain_type  resting_bps  cholesterol fasting_blood_sugar  \\\n","0      Atypical Angina          140          289               False   \n","1           Non-Angina          160          180               False   \n","2      Atypical Angina          130          283               False   \n","3  Asymptomatic Angina          138          214               False   \n","4           Non-Angina          150          195               False   \n","\n","             resting_ecg  max_heart_rate exercise_angina  oldpeak   st_slope  \\\n","0                 Normal             172              No      0.0  Upsloping   \n","1                 Normal             156              No      1.0       Flat   \n","2  ST-T Wave Abnormality              98              No      0.0  Upsloping   \n","3                 Normal             108             Yes      1.5       Flat   \n","4                 Normal             122              No      0.0  Upsloping   \n","\n","          target  \n","0         Normal  \n","1  Heart Disease  \n","2         Normal  \n","3  Heart Disease  \n","4         Normal  "],"text/html":["\n","  <div id=\"df-01113604-56c5-4a4f-a162-8ff4239a3d6b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patient id</th>\n","      <th>first name</th>\n","      <th>last name</th>\n","      <th>birth date</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>chest_pain_type</th>\n","      <th>resting_bps</th>\n","      <th>cholesterol</th>\n","      <th>fasting_blood_sugar</th>\n","      <th>resting_ecg</th>\n","      <th>max_heart_rate</th>\n","      <th>exercise_angina</th>\n","      <th>oldpeak</th>\n","      <th>st_slope</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Olivia</td>\n","      <td>Johnson</td>\n","      <td>12/03/1984</td>\n","      <td>40</td>\n","      <td>Male</td>\n","      <td>Atypical Angina</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>172</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>Upsloping</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Liam</td>\n","      <td>Brown</td>\n","      <td>25/08/1975</td>\n","      <td>49</td>\n","      <td>Female</td>\n","      <td>Non-Angina</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>156</td>\n","      <td>No</td>\n","      <td>1.0</td>\n","      <td>Flat</td>\n","      <td>Heart Disease</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Emma</td>\n","      <td>Smith</td>\n","      <td>07/11/1987</td>\n","      <td>37</td>\n","      <td>Male</td>\n","      <td>Atypical Angina</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>False</td>\n","      <td>ST-T Wave Abnormality</td>\n","      <td>98</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>Upsloping</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Noah</td>\n","      <td>Williams</td>\n","      <td>18/06/1976</td>\n","      <td>48</td>\n","      <td>Female</td>\n","      <td>Asymptomatic Angina</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>108</td>\n","      <td>Yes</td>\n","      <td>1.5</td>\n","      <td>Flat</td>\n","      <td>Heart Disease</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Ava</td>\n","      <td>Davis</td>\n","      <td>04/02/1971</td>\n","      <td>54</td>\n","      <td>Male</td>\n","      <td>Non-Angina</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>122</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>Upsloping</td>\n","      <td>Normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01113604-56c5-4a4f-a162-8ff4239a3d6b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-01113604-56c5-4a4f-a162-8ff4239a3d6b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-01113604-56c5-4a4f-a162-8ff4239a3d6b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cb7b159d-8f22-4aa7-87af-9d6949503209\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb7b159d-8f22-4aa7-87af-9d6949503209')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cb7b159d-8f22-4aa7-87af-9d6949503209 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"heart_copy","summary":"{\n  \"name\": \"heart_copy\",\n  \"rows\": 1190,\n  \"fields\": [\n    {\n      \"column\": \"patient id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 343,\n        \"min\": 1,\n        \"max\": 1190,\n        \"num_unique_values\": 1190,\n        \"samples\": [\n          391,\n          248,\n          261\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"first name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 221,\n        \"samples\": [\n          \"Faith\",\n          \"Xavier\",\n          \"Avery\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 700,\n        \"samples\": [\n          \"Cross\",\n          \"Sumner\",\n          \"Mayo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birth date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1058,\n        \"samples\": [\n          \"05/12/1973\",\n          \"25/10/1992\",\n          \"16/01/1972\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chest_pain_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Non-Angina\",\n          \"Typical Angina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting_bps\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101,\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fasting_blood_sugar\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"True\",\n          \"False\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting_ecg\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Normal\",\n          \"ST-T Wave Abnormality\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max_heart_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exercise_angina\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0863372185219835,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"st_slope\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Upsloping\",\n          \"Flat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Heart Disease\",\n          \"Normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["#Creating bins for some categorical variables\n","\n","# Define age bins and labels\n","bins = [0, 18, 35, 60, 90]\n","labels = ['Children', 'Young Adults', 'Adults', 'Senior Citizens']\n","\n","# Create age groups\n","heart_copy['age_group'] = pd.cut(heart_copy['age'], bins=bins, labels=labels, right=False)\n","\n","\n","# Define the bins and labels\n","bins = [0, 100, 130, 160, 190, float('inf')]\n","labels = ['Optimal', 'Near optimal', 'Borderline high', 'High', 'Very high']\n","\n","# Create cholesterol groups\n","heart_copy['cholesterol_level'] = pd.cut(heart_copy['cholesterol'], bins=bins, labels=labels, right=False)\n","\n","\n","# Define the bins and labels\n","bins = [70, 90, 120, 140, 190]\n","labels = ['Low', 'Ideal', 'Pre-High', 'High']\n","\n","# Create resting_bps groups\n","heart_copy['resting_bps_group'] = pd.cut(heart_copy['resting_bps'], bins=bins, labels=labels, right=False)\n","\n","# Display the DataFrame\n","heart_copy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"FF9f21IhEutC","executionInfo":{"status":"ok","timestamp":1740847328792,"user_tz":0,"elapsed":153,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}},"outputId":"f091e706-7e10-4f2a-d38a-61dfae7116fe"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      patient id first name    last name  birth date  age  gender  \\\n","0              1     Olivia      Johnson  12/03/1984   40    Male   \n","1              2       Liam        Brown  25/08/1975   49  Female   \n","2              3       Emma        Smith  07/11/1987   37    Male   \n","3              4       Noah     Williams  18/06/1976   48  Female   \n","4              5        Ava        Davis  04/02/1971   54    Male   \n","...          ...        ...          ...         ...  ...     ...   \n","1185        1186      Paige   Winterwood  16/08/1979   45    Male   \n","1186        1187     Archer  Willowstone  25/05/1956   68    Male   \n","1187        1188      Josie  Brightfield  19/01/1967   57    Male   \n","1188        1189     Holden    Crestwood  06/09/1967   57  Female   \n","1189        1190       Lena  Meadowcrest  20/12/1986   38    Male   \n","\n","          chest_pain_type  resting_bps  cholesterol fasting_blood_sugar  \\\n","0         Atypical Angina          140          289               False   \n","1              Non-Angina          160          180               False   \n","2         Atypical Angina          130          283               False   \n","3     Asymptomatic Angina          138          214               False   \n","4              Non-Angina          150          195               False   \n","...                   ...          ...          ...                 ...   \n","1185       Typical Angina          110          264               False   \n","1186  Asymptomatic Angina          144          193                True   \n","1187  Asymptomatic Angina          130          131               False   \n","1188      Atypical Angina          130          236               False   \n","1189           Non-Angina          138          175               False   \n","\n","                       resting_ecg  max_heart_rate exercise_angina  oldpeak  \\\n","0                           Normal             172              No      0.0   \n","1                           Normal             156              No      1.0   \n","2            ST-T Wave Abnormality              98              No      0.0   \n","3                           Normal             108             Yes      1.5   \n","4                           Normal             122              No      0.0   \n","...                            ...             ...             ...      ...   \n","1185                        Normal             132              No      1.2   \n","1186                        Normal             141              No      3.4   \n","1187                        Normal             115             Yes      1.2   \n","1188  Left Ventricular Hypertrophy             174              No      0.0   \n","1189                        Normal             173              No      0.0   \n","\n","       st_slope         target        age_group cholesterol_level  \\\n","0     Upsloping         Normal           Adults         Very high   \n","1          Flat  Heart Disease           Adults              High   \n","2     Upsloping         Normal           Adults         Very high   \n","3          Flat  Heart Disease           Adults         Very high   \n","4     Upsloping         Normal           Adults         Very high   \n","...         ...            ...              ...               ...   \n","1185       Flat  Heart Disease           Adults         Very high   \n","1186       Flat  Heart Disease  Senior Citizens         Very high   \n","1187       Flat  Heart Disease           Adults   Borderline high   \n","1188       Flat  Heart Disease           Adults         Very high   \n","1189  Upsloping         Normal           Adults              High   \n","\n","     resting_bps_group  \n","0                 High  \n","1                 High  \n","2             Pre-High  \n","3             Pre-High  \n","4                 High  \n","...                ...  \n","1185             Ideal  \n","1186              High  \n","1187          Pre-High  \n","1188          Pre-High  \n","1189          Pre-High  \n","\n","[1190 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-c355824f-062c-47d0-96bb-1fc204562285\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patient id</th>\n","      <th>first name</th>\n","      <th>last name</th>\n","      <th>birth date</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>chest_pain_type</th>\n","      <th>resting_bps</th>\n","      <th>cholesterol</th>\n","      <th>fasting_blood_sugar</th>\n","      <th>resting_ecg</th>\n","      <th>max_heart_rate</th>\n","      <th>exercise_angina</th>\n","      <th>oldpeak</th>\n","      <th>st_slope</th>\n","      <th>target</th>\n","      <th>age_group</th>\n","      <th>cholesterol_level</th>\n","      <th>resting_bps_group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Olivia</td>\n","      <td>Johnson</td>\n","      <td>12/03/1984</td>\n","      <td>40</td>\n","      <td>Male</td>\n","      <td>Atypical Angina</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>172</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>Upsloping</td>\n","      <td>Normal</td>\n","      <td>Adults</td>\n","      <td>Very high</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Liam</td>\n","      <td>Brown</td>\n","      <td>25/08/1975</td>\n","      <td>49</td>\n","      <td>Female</td>\n","      <td>Non-Angina</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>156</td>\n","      <td>No</td>\n","      <td>1.0</td>\n","      <td>Flat</td>\n","      <td>Heart Disease</td>\n","      <td>Adults</td>\n","      <td>High</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Emma</td>\n","      <td>Smith</td>\n","      <td>07/11/1987</td>\n","      <td>37</td>\n","      <td>Male</td>\n","      <td>Atypical Angina</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>False</td>\n","      <td>ST-T Wave Abnormality</td>\n","      <td>98</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>Upsloping</td>\n","      <td>Normal</td>\n","      <td>Adults</td>\n","      <td>Very high</td>\n","      <td>Pre-High</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Noah</td>\n","      <td>Williams</td>\n","      <td>18/06/1976</td>\n","      <td>48</td>\n","      <td>Female</td>\n","      <td>Asymptomatic Angina</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>108</td>\n","      <td>Yes</td>\n","      <td>1.5</td>\n","      <td>Flat</td>\n","      <td>Heart Disease</td>\n","      <td>Adults</td>\n","      <td>Very high</td>\n","      <td>Pre-High</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Ava</td>\n","      <td>Davis</td>\n","      <td>04/02/1971</td>\n","      <td>54</td>\n","      <td>Male</td>\n","      <td>Non-Angina</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>122</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>Upsloping</td>\n","      <td>Normal</td>\n","      <td>Adults</td>\n","      <td>Very high</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1185</th>\n","      <td>1186</td>\n","      <td>Paige</td>\n","      <td>Winterwood</td>\n","      <td>16/08/1979</td>\n","      <td>45</td>\n","      <td>Male</td>\n","      <td>Typical Angina</td>\n","      <td>110</td>\n","      <td>264</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>132</td>\n","      <td>No</td>\n","      <td>1.2</td>\n","      <td>Flat</td>\n","      <td>Heart Disease</td>\n","      <td>Adults</td>\n","      <td>Very high</td>\n","      <td>Ideal</td>\n","    </tr>\n","    <tr>\n","      <th>1186</th>\n","      <td>1187</td>\n","      <td>Archer</td>\n","      <td>Willowstone</td>\n","      <td>25/05/1956</td>\n","      <td>68</td>\n","      <td>Male</td>\n","      <td>Asymptomatic Angina</td>\n","      <td>144</td>\n","      <td>193</td>\n","      <td>True</td>\n","      <td>Normal</td>\n","      <td>141</td>\n","      <td>No</td>\n","      <td>3.4</td>\n","      <td>Flat</td>\n","      <td>Heart Disease</td>\n","      <td>Senior Citizens</td>\n","      <td>Very high</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>1187</th>\n","      <td>1188</td>\n","      <td>Josie</td>\n","      <td>Brightfield</td>\n","      <td>19/01/1967</td>\n","      <td>57</td>\n","      <td>Male</td>\n","      <td>Asymptomatic Angina</td>\n","      <td>130</td>\n","      <td>131</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>115</td>\n","      <td>Yes</td>\n","      <td>1.2</td>\n","      <td>Flat</td>\n","      <td>Heart Disease</td>\n","      <td>Adults</td>\n","      <td>Borderline high</td>\n","      <td>Pre-High</td>\n","    </tr>\n","    <tr>\n","      <th>1188</th>\n","      <td>1189</td>\n","      <td>Holden</td>\n","      <td>Crestwood</td>\n","      <td>06/09/1967</td>\n","      <td>57</td>\n","      <td>Female</td>\n","      <td>Atypical Angina</td>\n","      <td>130</td>\n","      <td>236</td>\n","      <td>False</td>\n","      <td>Left Ventricular Hypertrophy</td>\n","      <td>174</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>Flat</td>\n","      <td>Heart Disease</td>\n","      <td>Adults</td>\n","      <td>Very high</td>\n","      <td>Pre-High</td>\n","    </tr>\n","    <tr>\n","      <th>1189</th>\n","      <td>1190</td>\n","      <td>Lena</td>\n","      <td>Meadowcrest</td>\n","      <td>20/12/1986</td>\n","      <td>38</td>\n","      <td>Male</td>\n","      <td>Non-Angina</td>\n","      <td>138</td>\n","      <td>175</td>\n","      <td>False</td>\n","      <td>Normal</td>\n","      <td>173</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>Upsloping</td>\n","      <td>Normal</td>\n","      <td>Adults</td>\n","      <td>High</td>\n","      <td>Pre-High</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1190 rows × 19 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c355824f-062c-47d0-96bb-1fc204562285')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c355824f-062c-47d0-96bb-1fc204562285 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c355824f-062c-47d0-96bb-1fc204562285');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c8eb0c16-7cc7-4fc7-b79b-7ed57746d0b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c8eb0c16-7cc7-4fc7-b79b-7ed57746d0b0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c8eb0c16-7cc7-4fc7-b79b-7ed57746d0b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0460d8e3-1094-420c-a5c4-70a76d0502b0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('heart_copy')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0460d8e3-1094-420c-a5c4-70a76d0502b0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('heart_copy');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"heart_copy","summary":"{\n  \"name\": \"heart_copy\",\n  \"rows\": 1190,\n  \"fields\": [\n    {\n      \"column\": \"patient id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 343,\n        \"min\": 1,\n        \"max\": 1190,\n        \"num_unique_values\": 1190,\n        \"samples\": [\n          391,\n          248,\n          261\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"first name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 221,\n        \"samples\": [\n          \"Faith\",\n          \"Xavier\",\n          \"Avery\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 700,\n        \"samples\": [\n          \"Cross\",\n          \"Sumner\",\n          \"Mayo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birth date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1058,\n        \"samples\": [\n          \"05/12/1973\",\n          \"25/10/1992\",\n          \"16/01/1972\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chest_pain_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Non-Angina\",\n          \"Typical Angina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting_bps\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101,\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fasting_blood_sugar\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"True\",\n          \"False\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting_ecg\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Normal\",\n          \"ST-T Wave Abnormality\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max_heart_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exercise_angina\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0863372185219835,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"st_slope\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Upsloping\",\n          \"Flat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Heart Disease\",\n          \"Normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age_group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Adults\",\n          \"Senior Citizens\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cholesterol_level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"High\",\n          \"Optimal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resting_bps_group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Pre-High\",\n          \"Low\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["# Function to convert age to birthDate\n","def calculate_birth_date(age):\n","    current_year = datetime.now().year\n","    birth_year = current_year - age\n","    return f\"{birth_year}-01-01\"  # Assume January 1st for simplicity\n"],"metadata":{"id":"4a5K9Ad7CAwg","executionInfo":{"status":"ok","timestamp":1740847329668,"user_tz":0,"elapsed":34,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","def calculate_birth_date(age, current_year=2025):\n","    \"\"\"Calculates birth year based on age and current year.\"\"\"\n","    return f\"{current_year - age}-01-01\"\n","\n","def create_fhir_resources(row):\n","    \"\"\"\n","    Maps a patient's data row to FHIR-compliant resources.\n","\n","    Parameters:\n","    - row (pd.Series): A Pandas Series representing a single patient's data.\n","\n","    Returns:\n","    - List[dict]: A list of FHIR resources (Patient, Observations, Condition).\n","    \"\"\"\n","    resources = []\n","\n","    # Create Patient resource\n","    patient = {\n","        \"resourceType\": \"Patient\",\n","        \"id\": str(row.name),\n","        \"gender\": \"male\" if row[\"gender\"] == 1 else \"female\",\n","        \"birthDate\": calculate_birth_date(row[\"age\"])\n","    }\n","    resources.append(patient)\n","\n","    # Ordered Observations based on given list\n","    observations = [\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-chest_pain_type\",\n","            \"code\": {\"text\": \"Chest Pain Type\"},\n","            \"valueString\": str(row[\"chest_pain_type\"])\n","        },\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-resting_bps\",\n","            \"code\": {\"text\": \"Systolic Blood Pressure\"},\n","            \"valueQuantity\": {\"value\": row[\"resting_bps\"], \"unit\": \"mmHg\"}\n","        },\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-cholesterol\",\n","            \"code\": {\"text\": \"Total Cholesterol\"},\n","            \"valueQuantity\": {\"value\": row[\"cholesterol\"], \"unit\": \"mg/dL\"}\n","        },\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-fasting_blood_sugar\",\n","            \"code\": {\"text\": \"Fasting Blood Sugar\"},\n","            \"valueBoolean\": row[\"fasting_blood_sugar\"] >= 120\n","        },\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-resting_ecg\",\n","            \"code\": {\"text\": \"Resting Electrocardiogram\"},\n","            \"valueCodeableConcept\": {\"text\": str(row[\"resting_ecg\"])}\n","        },\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-max_heart_rate\",\n","            \"code\": {\"text\": \"Maximum Heart Rate\"},\n","            \"valueQuantity\": {\"value\": row[\"max_heart_rate\"], \"unit\": \"bpm\"}\n","        },\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-exercise_angina\",\n","            \"code\": {\"text\": \"Exercise Angina\"},\n","            \"valueBoolean\": bool(row[\"exercise_angina\"])\n","        },\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-oldpeak\",\n","            \"code\": {\"text\": \"ST Depression\"},\n","            \"valueQuantity\": {\"value\": row[\"oldpeak\"], \"unit\": \"mm\"}\n","        },\n","        {\n","            \"resourceType\": \"Observation\",\n","            \"id\": f\"obs-{row.name}-st_slope\",\n","            \"code\": {\"text\": \"ST Slope\"},\n","            \"valueQuantity\": {\"value\": row[\"st_slope\"], \"unit\": \"mm\"}\n","        }\n","    ]\n","    resources.extend(observations)\n","\n","    # Create Condition resource for heart disease (target)\n","    target_condition = {\n","        \"resourceType\": \"Condition\",\n","        \"id\": f\"cond-{row.name}-heart_disease\",\n","        \"code\": {\"text\": \"Heart Disease\"},\n","        \"clinicalStatus\": {\"text\": \"active\" if row[\"target\"] == 1 else \"inactive\"}\n","    }\n","    resources.append(target_condition)\n","\n","    return resources\n"],"metadata":{"id":"r3bLUz9AlaC6","executionInfo":{"status":"ok","timestamp":1740847330367,"user_tz":0,"elapsed":37,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["# Convert each row to FHIR resources\n","fhir_data = []\n","for _, row in df.iterrows():\n","    fhir_data.extend(create_fhir_resources(row))"],"metadata":{"id":"DAYc05_kCRlw","executionInfo":{"status":"ok","timestamp":1740847331933,"user_tz":0,"elapsed":106,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["import json\n","import numpy as np\n","\n","class NumpyEncoder(json.JSONEncoder):\n","    def default(self, obj):\n","        if isinstance(obj, np.generic):\n","            return obj.item()  # Convert numpy types to native Python types\n","        return super().default(obj)\n","\n","# Save to JSON file using the custom encoder\n","output_file = \"heart_fhir_data.json\"\n","with open(output_file, \"w\") as file:\n","    json.dump(fhir_data, file, indent=4, cls=NumpyEncoder)"],"metadata":{"id":"9tTQrROxFvxR","executionInfo":{"status":"ok","timestamp":1740847333092,"user_tz":0,"elapsed":229,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["# Save to JSON file\n","output_file = \"heart_fhir_data.json\"\n","with open(output_file, \"w\") as file:\n","    json.dump(fhir_data, file, indent=4)"],"metadata":{"id":"r69KlhvGCTdN","executionInfo":{"status":"ok","timestamp":1740847363375,"user_tz":0,"elapsed":123,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["print(f\"FHIR data saved to {output_file}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5duLS6MfCVGK","executionInfo":{"status":"ok","timestamp":1740847364381,"user_tz":0,"elapsed":13,"user":{"displayName":"Ubaida Abdulai","userId":"02207962107232948360"}},"outputId":"d9a68264-6630-441f-d85e-aa4d088c4699"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["FHIR data saved to heart_fhir_data.json\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"56_Mk7WekDCu"},"execution_count":null,"outputs":[]}]}